// <auto-generated />
using System;
using FitnessWebApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessWebApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessWebApi.Database.Entities.ActivityLevel", b =>
                {
                    b.Property<int>("ActivityLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityLevelID"));

                    b.Property<string>("ActivityLevelName")
                        .HasColumnType("nvarchar(64)");

                    b.Property<short>("DailyIntake")
                        .HasColumnType("smallint");

                    b.HasKey("ActivityLevelID");

                    b.ToTable("ActivityLevel");

                    b.HasData(
                        new
                        {
                            ActivityLevelID = 1,
                            ActivityLevelName = "Female-Sedentary",
                            DailyIntake = (short)1800
                        },
                        new
                        {
                            ActivityLevelID = 2,
                            ActivityLevelName = "Female-Moderately",
                            DailyIntake = (short)2000
                        },
                        new
                        {
                            ActivityLevelID = 3,
                            ActivityLevelName = "Female-Active",
                            DailyIntake = (short)2400
                        },
                        new
                        {
                            ActivityLevelID = 4,
                            ActivityLevelName = "Male-Sedentary",
                            DailyIntake = (short)2200
                        },
                        new
                        {
                            ActivityLevelID = 5,
                            ActivityLevelName = "Male-Moderately",
                            DailyIntake = (short)2800
                        },
                        new
                        {
                            ActivityLevelID = 6,
                            ActivityLevelName = "Male-Active",
                            DailyIntake = (short)3200
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.Gender", b =>
                {
                    b.Property<int>("GenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderID"));

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("GenderID");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            GenderID = 1,
                            GenderName = "Male"
                        },
                        new
                        {
                            GenderID = 2,
                            GenderName = "Female"
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.MealTime", b =>
                {
                    b.Property<int>("MealTimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealTimeID"));

                    b.Property<string>("MealTimeName")
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("MealTimeID");

                    b.ToTable("MealTime");

                    b.HasData(
                        new
                        {
                            MealTimeID = 1,
                            MealTimeName = "Breakfast"
                        },
                        new
                        {
                            MealTimeID = 2,
                            MealTimeName = "Lunch"
                        },
                        new
                        {
                            MealTimeID = 3,
                            MealTimeName = "Dinner"
                        },
                        new
                        {
                            MealTimeID = 4,
                            MealTimeName = "Snack"
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.PlanProgress", b =>
                {
                    b.Property<int>("PlanProgressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanProgressID"));

                    b.Property<double?>("CurrentWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("ProgressDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserPlanID")
                        .HasColumnType("int");

                    b.HasKey("PlanProgressID");

                    b.HasIndex("UserPlanID");

                    b.ToTable("PlanProgress");

                    b.HasData(
                        new
                        {
                            PlanProgressID = 1,
                            CurrentWeight = 79.0,
                            ProgressDate = new DateTime(2023, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserPlanID = 1
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<double>("CarbohydrateAmount")
                        .HasColumnType("float");

                    b.Property<double>("EnergyAmount")
                        .HasColumnType("float");

                    b.Property<double>("FatAmount")
                        .HasColumnType("float");

                    b.Property<double>("FiberAmount")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ProductManufacturer")
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(96)");

                    b.Property<double>("ProteinAmount")
                        .HasColumnType("float");

                    b.Property<double>("SaltAmount")
                        .HasColumnType("float");

                    b.Property<double>("SaturatedFatAmount")
                        .HasColumnType("float");

                    b.Property<double>("SugarAmount")
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.HasIndex("ProductCode")
                        .IsUnique()
                        .HasFilter("[ProductCode] IS NOT NULL");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CarbohydrateAmount = 6.2000000000000002,
                            EnergyAmount = 160.0,
                            FatAmount = 9.3000000000000007,
                            FiberAmount = 0.0,
                            ProductCode = " 7032069719657",
                            ProductManufacturer = "REMA 1000",
                            ProductName = "Makrel i tomat",
                            ProteinAmount = 12.0,
                            SaltAmount = 0.63,
                            SaturatedFatAmount = 1.8999999999999999,
                            SugarAmount = 4.0
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.ProgressMeal", b =>
                {
                    b.Property<int>("ProgressMealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressMealID"));

                    b.Property<int>("MealTimeID")
                        .HasColumnType("int");

                    b.Property<int>("PlanProgressID")
                        .HasColumnType("int");

                    b.HasKey("ProgressMealID");

                    b.HasIndex("MealTimeID");

                    b.HasIndex("PlanProgressID");

                    b.ToTable("ProgressMeal");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.SizedProduct", b =>
                {
                    b.Property<int>("SizedProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizedProductID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ProgressMealID")
                        .HasColumnType("int");

                    b.Property<double>("ServingSize")
                        .HasColumnType("float");

                    b.Property<int?>("UserMealMealID")
                        .HasColumnType("int");

                    b.Property<int?>("UserRecipeRecipeID")
                        .HasColumnType("int");

                    b.HasKey("SizedProductID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProgressMealID");

                    b.HasIndex("UserMealMealID");

                    b.HasIndex("UserRecipeRecipeID");

                    b.ToTable("SizedProduct");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("GenderID")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Last_Login")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserPlanID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("GenderID");

                    b.HasIndex("UserPlanID")
                        .IsUnique()
                        .HasFilter("[UserPlanID] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            BirthdayDate = new DateTime(2003, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2023, 2, 10, 11, 56, 36, 841, DateTimeKind.Utc).AddTicks(9994),
                            Email = "example.com",
                            FirstName = "Nicklas",
                            GenderID = 1,
                            Height = 181.0,
                            LastName = "Osbeck",
                            LastLogin = new DateTime(2023, 2, 10, 11, 56, 36, 841, DateTimeKind.Utc).AddTicks(9995),
                            ModifiedAt = new DateTime(2023, 2, 10, 11, 56, 36, 841, DateTimeKind.Utc).AddTicks(9995),
                            Password = "$2a$10$JJEkSgTubSd0S08ZxEneXOtLxGQ/XUFg/Y9/EcgxoqM7qEQaPfc2K",
                            UserPlanID = 1
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserMeal", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealID"));

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("MealTimeID")
                        .HasColumnType("int");

                    b.Property<double>("PortionAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TotalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MealID");

                    b.HasIndex("MealTimeID");

                    b.HasIndex("UserID");

                    b.ToTable("UserMeal");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserPlan", b =>
                {
                    b.Property<int>("UserPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPlanID"));

                    b.Property<int>("ActivityLevelID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("StartWeight")
                        .HasColumnType("float");

                    b.Property<double>("WeeklyGoal")
                        .HasColumnType("float");

                    b.Property<double>("WeightGoal")
                        .HasColumnType("float");

                    b.HasKey("UserPlanID");

                    b.HasIndex("ActivityLevelID");

                    b.ToTable("UserPlan");

                    b.HasData(
                        new
                        {
                            UserPlanID = 1,
                            ActivityLevelID = 5,
                            StartDate = new DateTime(2023, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartWeight = 79.0,
                            WeeklyGoal = 0.5,
                            WeightGoal = 85.0
                        });
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserRecipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeID"));

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(512)");

                    b.Property<double>("PortionAmount")
                        .HasColumnType("float");

                    b.Property<string>("RecipeName")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("TotalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RecipeID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRecipe");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.PlanProgress", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.UserPlan", "UserPlan")
                        .WithMany("PlanProgress")
                        .HasForeignKey("UserPlanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserPlan");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.ProgressMeal", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.MealTime", "MealTime")
                        .WithMany()
                        .HasForeignKey("MealTimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessWebApi.Database.Entities.PlanProgress", "PlanProgress")
                        .WithMany("ProgressMeals")
                        .HasForeignKey("PlanProgressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealTime");

                    b.Navigation("PlanProgress");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.SizedProduct", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessWebApi.Database.Entities.ProgressMeal", "ProgressMeal")
                        .WithMany("SizedProducts")
                        .HasForeignKey("ProgressMealID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitnessWebApi.Database.Entities.UserMeal", "UserMeal")
                        .WithMany("SizedProducts")
                        .HasForeignKey("UserMealMealID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitnessWebApi.Database.Entities.UserRecipe", "UserRecipe")
                        .WithMany("SizedProducts")
                        .HasForeignKey("UserRecipeRecipeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Product");

                    b.Navigation("ProgressMeal");

                    b.Navigation("UserMeal");

                    b.Navigation("UserRecipe");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.User", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessWebApi.Database.Entities.UserPlan", "UserPlan")
                        .WithOne("User")
                        .HasForeignKey("FitnessWebApi.Database.Entities.User", "UserPlanID");

                    b.Navigation("Gender");

                    b.Navigation("UserPlan");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserMeal", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.MealTime", "MealTime")
                        .WithMany()
                        .HasForeignKey("MealTimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessWebApi.Database.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealTime");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserPlan", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.ActivityLevel", "ActivityLevel")
                        .WithMany()
                        .HasForeignKey("ActivityLevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityLevel");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserRecipe", b =>
                {
                    b.HasOne("FitnessWebApi.Database.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.PlanProgress", b =>
                {
                    b.Navigation("ProgressMeals");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.ProgressMeal", b =>
                {
                    b.Navigation("SizedProducts");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserMeal", b =>
                {
                    b.Navigation("SizedProducts");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserPlan", b =>
                {
                    b.Navigation("PlanProgress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessWebApi.Database.Entities.UserRecipe", b =>
                {
                    b.Navigation("SizedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
